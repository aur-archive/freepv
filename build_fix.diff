diff -rup freepv-0.3.0/src/libfreepv/Action.h freepv-0.3.0.new//src/libfreepv/Action.h
--- freepv-0.3.0/src/libfreepv/Action.h	2009-05-02 01:12:31.000000000 +0200
+++ freepv-0.3.0.new//src/libfreepv/Action.h	2011-08-14 12:06:26.568973837 +0200
@@ -35,7 +35,7 @@ namespace FPV
     float m_pitch;
     const char* m_scene;
   public:
-    SetView(float _fov, float _yaw, float _pitch, const char* _scene = NULL);
+    SetView(float _fov, float _yaw, float _pitch, const char* _scene = 0);
     void execute();
   };
 }
diff -rup freepv-0.3.0/src/libfreepv/JpegReader.cpp freepv-0.3.0.new//src/libfreepv/JpegReader.cpp
--- freepv-0.3.0/src/libfreepv/JpegReader.cpp	2009-05-02 01:12:31.000000000 +0200
+++ freepv-0.3.0.new//src/libfreepv/JpegReader.cpp	2011-08-14 12:07:49.067773971 +0200
@@ -267,7 +267,7 @@ decodeJPEG(unsigned char * buffer, size_
     jpeg_create_decompress(&cinfo);
 
     /* Step 2: specify data source (eg, a file) */
-    jpeg_mem_src(&cinfo, buffer, buf_len);
+    ::jpeg_mem_src(&cinfo, buffer, buf_len);
 
     /* Step 3: read file parameters with jpeg_read_header() */
 
diff -rup freepv-0.3.0/src/libfreepv/OpenGLRenderer.cpp freepv-0.3.0.new//src/libfreepv/OpenGLRenderer.cpp
--- freepv-0.3.0/src/libfreepv/OpenGLRenderer.cpp	2009-05-02 01:12:31.000000000 +0200
+++ freepv-0.3.0.new//src/libfreepv/OpenGLRenderer.cpp	2011-08-14 12:05:48.312863571 +0200
@@ -27,6 +27,7 @@
 
 #include <vector>
 #include <math.h>
+#include <stdio.h>
 
 #include "OpenGLRenderer.h"
 #include "Scene.h"
diff -rup freepv-0.3.0/src/libfreepv/pngReader.cpp freepv-0.3.0.new//src/libfreepv/pngReader.cpp
--- freepv-0.3.0/src/libfreepv/pngReader.cpp	2009-05-02 01:12:31.000000000 +0200
+++ freepv-0.3.0.new//src/libfreepv/pngReader.cpp	2011-08-14 12:12:32.126990474 +0200
@@ -135,7 +135,7 @@ namespace FPV
     //Transfor grayscale images with less
     //than 8 bits to 8 bits
     if(color_t == PNG_COLOR_TYPE_GRAY && depth<8)
-      png_set_gray_1_2_4_to_8(p_png_struct);
+      png_set_expand_gray_1_2_4_to_8(p_png_struct);
 
     //Add a full alpha channel if there is
     //transparency information in the tRNS chunk
@@ -283,7 +283,7 @@ namespace FPV
     //Transfor grayscale images with less
     //than 8 bits to 8 bits.
     if(color_t == PNG_COLOR_TYPE_GRAY && depth<8)
-      png_set_gray_1_2_4_to_8(p_png_struct);
+      png_set_expand_gray_1_2_4_to_8(p_png_struct);
 
     //Add a full alpha channel if there is
     //transparency information in the tRNS chunk
diff -rup freepv-0.3.0/src/libfreepv/QTVRDecoder.cpp freepv-0.3.0.new//src/libfreepv/QTVRDecoder.cpp
--- freepv-0.3.0/src/libfreepv/QTVRDecoder.cpp	2009-05-02 01:12:31.000000000 +0200
+++ freepv-0.3.0.new//src/libfreepv/QTVRDecoder.cpp	2011-08-14 12:11:14.194790591 +0200
@@ -42,6 +42,7 @@
 #include <errno.h>
 #include <vector>
 #include <cstring>
+#include <stdio.h>
 
 #include <zlib.h>
 
diff -rup freepv-0.3.0/src/libfreepv/SPiVparser.cpp freepv-0.3.0.new//src/libfreepv/SPiVparser.cpp
--- freepv-0.3.0/src/libfreepv/SPiVparser.cpp	2009-05-02 01:12:31.000000000 +0200
+++ freepv-0.3.0.new//src/libfreepv/SPiVparser.cpp	2011-08-14 12:10:46.445194183 +0200
@@ -490,7 +490,7 @@ void SPiVparser::parseNodeURL(const char
 {
     char * aux_url=NULL;
     char * url=(char*) _url;
-    if(aux_url = strrchr (_url,'/'))
+    if(aux_url = (char*)strrchr (_url,'/'))
     {
        url=aux_url;
        url++;
diff -rup freepv-0.3.0/src/libfreepv/Utils/signatures.cpp freepv-0.3.0.new//src/libfreepv/Utils/signatures.cpp
--- freepv-0.3.0/src/libfreepv/Utils/signatures.cpp	2009-05-02 01:12:31.000000000 +0200
+++ freepv-0.3.0.new//src/libfreepv/Utils/signatures.cpp	2011-08-14 12:12:55.569982852 +0200
@@ -24,6 +24,7 @@
 
 #include "signatures.h"
 #include <iostream>
+#include <stdio.h>
 
 namespace FPV{
 namespace Utils{
diff -rup freepv-0.3.0/src/libfreepv/utils.cpp freepv-0.3.0.new//src/libfreepv/utils.cpp
--- freepv-0.3.0/src/libfreepv/utils.cpp	2009-05-02 01:12:31.000000000 +0200
+++ freepv-0.3.0.new//src/libfreepv/utils.cpp	2011-08-14 12:08:08.467491819 +0200
@@ -23,6 +23,7 @@
  */
 
 #include <algorithm>
+#include <stdio.h>
 
 #include "utils.h"
 
